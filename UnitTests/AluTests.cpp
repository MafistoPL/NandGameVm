#include "gtest/gtest.h"
#include "alu.h"

namespace AluTests
{
	TEST(AluTes, AluTest)
	{
		EXPECT_EQ(ALU::Compute({ 0, 1, 0, 1, 0, 1 }, 0b0000000000000000, 0b1111111111111111), 0b0000000000000000);
		EXPECT_EQ(ALU::Compute({ 1, 1, 1, 1, 1, 1 }, 0b0000000000000000, 0b1111111111111111), 0b0000000000000001);
		EXPECT_EQ(ALU::Compute({ 0, 1, 0, 1, 1, 1 }, 0b0000000000000000, 0b1111111111111111), 0b1111111111111111);
		EXPECT_EQ(ALU::Compute({ 0, 0, 1, 1, 0, 0 }, 0b0000000000000000, 0b1111111111111111), 0b0000000000000000);
		EXPECT_EQ(ALU::Compute({ 0, 0, 0, 0, 1, 1 }, 0b0000000000000000, 0b1111111111111111), 0b1111111111111111);
		EXPECT_EQ(ALU::Compute({ 1, 0, 1, 1, 0, 0 }, 0b0000000000000000, 0b1111111111111111), 0b1111111111111111);
		EXPECT_EQ(ALU::Compute({ 1, 0, 0, 0, 1, 1 }, 0b0000000000000000, 0b1111111111111111), 0b0000000000000000);
		EXPECT_EQ(ALU::Compute({ 1, 1, 1, 1, 0, 0 }, 0b0000000000000000, 0b1111111111111111), 0b0000000000000000);
		EXPECT_EQ(ALU::Compute({ 1, 1, 0, 0, 1, 1 }, 0b0000000000000000, 0b1111111111111111), 0b0000000000000001);
		EXPECT_EQ(ALU::Compute({ 1, 1, 1, 1, 1, 0 }, 0b0000000000000000, 0b1111111111111111), 0b0000000000000001);
		EXPECT_EQ(ALU::Compute({ 1, 1, 1, 0, 1, 1 }, 0b0000000000000000, 0b1111111111111111), 0b0000000000000000);
		EXPECT_EQ(ALU::Compute({ 0, 1, 1, 1, 0, 0 }, 0b0000000000000000, 0b1111111111111111), 0b1111111111111111);
		EXPECT_EQ(ALU::Compute({ 0, 1, 0, 0, 1, 1 }, 0b0000000000000000, 0b1111111111111111), 0b1111111111111110);
		EXPECT_EQ(ALU::Compute({ 0, 1, 0, 0, 0, 0 }, 0b0000000000000000, 0b1111111111111111), 0b1111111111111111);
		EXPECT_EQ(ALU::Compute({ 1, 1, 0, 0, 1, 0 }, 0b0000000000000000, 0b1111111111111111), 0b0000000000000001);
		EXPECT_EQ(ALU::Compute({ 1, 1, 1, 0, 0, 0 }, 0b0000000000000000, 0b1111111111111111), 0b1111111111111111);
		EXPECT_EQ(ALU::Compute({ 0, 0, 0, 0, 0, 0 }, 0b0000000000000000, 0b1111111111111111), 0b0000000000000000);
		EXPECT_EQ(ALU::Compute({ 1, 0, 1, 0, 1, 0 }, 0b0000000000000000, 0b1111111111111111), 0b1111111111111111);
		EXPECT_EQ(ALU::Compute({ 0, 1, 0, 1, 0, 1 }, 0b0000000000010001, 0b0000000000000011), 0b0000000000000000);
		EXPECT_EQ(ALU::Compute({ 1, 1, 1, 1, 1, 1 }, 0b0000000000010001, 0b0000000000000011), 0b0000000000000001);
		EXPECT_EQ(ALU::Compute({ 0, 1, 0, 1, 1, 1 }, 0b0000000000010001, 0b0000000000000011), 0b1111111111111111);
		EXPECT_EQ(ALU::Compute({ 0, 0, 1, 1, 0, 0 }, 0b0000000000010001, 0b0000000000000011), 0b0000000000010001);
		EXPECT_EQ(ALU::Compute({ 0, 0, 0, 0, 1, 1 }, 0b0000000000010001, 0b0000000000000011), 0b0000000000000011);
		EXPECT_EQ(ALU::Compute({ 1, 0, 1, 1, 0, 0 }, 0b0000000000010001, 0b0000000000000011), 0b1111111111101110);
		EXPECT_EQ(ALU::Compute({ 1, 0, 0, 0, 1, 1 }, 0b0000000000010001, 0b0000000000000011), 0b1111111111111100);
		EXPECT_EQ(ALU::Compute({ 1, 1, 1, 1, 0, 0 }, 0b0000000000010001, 0b0000000000000011), 0b1111111111101111);
		EXPECT_EQ(ALU::Compute({ 1, 1, 0, 0, 1, 1 }, 0b0000000000010001, 0b0000000000000011), 0b1111111111111101);
		EXPECT_EQ(ALU::Compute({ 1, 1, 1, 1, 1, 0 }, 0b0000000000010001, 0b0000000000000011), 0b0000000000010010);
		EXPECT_EQ(ALU::Compute({ 1, 1, 1, 0, 1, 1 }, 0b0000000000010001, 0b0000000000000011), 0b0000000000000100);
		EXPECT_EQ(ALU::Compute({ 0, 1, 1, 1, 0, 0 }, 0b0000000000010001, 0b0000000000000011), 0b0000000000010000);
		EXPECT_EQ(ALU::Compute({ 0, 1, 0, 0, 1, 1 }, 0b0000000000010001, 0b0000000000000011), 0b0000000000000010);
		EXPECT_EQ(ALU::Compute({ 0, 1, 0, 0, 0, 0 }, 0b0000000000010001, 0b0000000000000011), 0b0000000000010100);
		EXPECT_EQ(ALU::Compute({ 1, 1, 0, 0, 1, 0 }, 0b0000000000010001, 0b0000000000000011), 0b0000000000001110);
		EXPECT_EQ(ALU::Compute({ 1, 1, 1, 0, 0, 0 }, 0b0000000000010001, 0b0000000000000011), 0b1111111111110010);
		EXPECT_EQ(ALU::Compute({ 0, 0, 0, 0, 0, 0 }, 0b0000000000010001, 0b0000000000000011), 0b0000000000000001);
		EXPECT_EQ(ALU::Compute({ 1, 0, 1, 0, 1, 0 }, 0b0000000000010001, 0b0000000000000011), 0b0000000000010011);
	}
}